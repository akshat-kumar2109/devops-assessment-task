---
- name: Set up servers with Docker and Node.js
  hosts: all
  become: yes
  vars:
    aws_region: "us-east-1"
    cloudwatch_config_file: "/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json"

  tasks:
    # System Setup
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common
          - python3-pip
          - python3-setuptools
          - git
          - build-essential
          - wget
          - unzip
          - nginx
        state: present

    - name: Install AWS CLI
      pip:
        name: awscli
        state: present

    # Directory Setup
    - name: Create required directories
      file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner | default('root') }}"
        group: "{{ item.group | default('root') }}"
        mode: "{{ item.mode | default('0755') }}"
      loop:
        - { path: "/opt/node-app", owner: "ubuntu", group: "ubuntu" }
        - { path: "/var/log/node-app", owner: "ubuntu", group: "ubuntu" }
        - { path: "/opt/aws/amazon-cloudwatch-agent/etc" }
        - { path: "/home/ubuntu/.aws", owner: "ubuntu", group: "ubuntu", mode: "0700" }

    # AWS Configuration
    - name: Configure AWS CLI
      template:
        src: templates/aws-config.j2
        dest: /home/ubuntu/.aws/config
        owner: ubuntu
        group: ubuntu
        mode: '0600'

    # CloudWatch Agent Setup
    - name: Download CloudWatch Agent
      get_url:
        url: https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb
        dest: /tmp/amazon-cloudwatch-agent.deb
        mode: '0644'

    - name: Install CloudWatch Agent
      apt:
        deb: /tmp/amazon-cloudwatch-agent.deb
        state: present

    - name: Copy CloudWatch Agent configuration
      template:
        src: templates/amazon-cloudwatch-agent.json.j2
        dest: "{{ cloudwatch_config_file }}"
        mode: '0644'
      notify: Restart CloudWatch Agent

    - name: Start CloudWatch Agent
      systemd:
        name: amazon-cloudwatch-agent
        state: started
        enabled: yes

    # Docker Setup
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    # Nginx Setup
    - name: Configure Nginx reverse proxy
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/sites-available/node-app.conf
        mode: '0644'
      notify: Restart Nginx

    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: Restart Nginx

    - name: Enable Node.js application site
      file:
        src: /etc/nginx/sites-available/node-app.conf
        dest: /etc/nginx/sites-enabled/node-app.conf
        state: link
      notify: Restart Nginx

    - name: Ensure Nginx directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /var/log/nginx
        - /etc/nginx/sites-available
        - /etc/nginx/sites-enabled

    - name: Start and enable Nginx
      service:
        name: nginx
        state: started
        enabled: yes

  handlers:
    - name: Restart CloudWatch Agent
      systemd:
        name: amazon-cloudwatch-agent
        state: restarted

    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted 