name: Deploy Node.js Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        cd node-app
        npm ci
        
    - name: Build Docker image
      run: |
        cd node-app
        docker build -t node-app:${{ github.sha }} .
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Push Docker image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: node-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker tag node-app:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Login to ECR
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
          
          # Pull the new image
          docker pull ${{ steps.login-ecr.outputs.registry }}/node-app:${{ github.sha }}
          
          # Stop and remove the old container if it exists
          docker stop node-app || true
          docker rm node-app || true
          
          # Run the new container
          docker run -d \
            --name node-app \
            -p 3000:3000 \
            --restart always \
            ${{ steps.login-ecr.outputs.registry }}/node-app:${{ github.sha }} 